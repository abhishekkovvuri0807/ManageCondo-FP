@model ManageCondo_FP.Models.ResidentViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Create Resident</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ResidentID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.ResidentID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ResidentID, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole("Resident"))
    {
        <div class="form-group">
            @Html.Label("User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.UserID, Model.Users, "-- Select User --", new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Unit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.UnitID, Model.Units, "-- Select Unit --", new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.Label("User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.UserID, Model.Users, "-- Select User --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Unit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.UnitID, Model.Units, "-- Select Unit --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UnitID, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    <div class="form-group">
        @Html.Label("Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(m => m.ResidentType, new SelectList(Enum.GetValues(typeof(ManageCondo_FP.Common.ResidentType))), "-- Select Type --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ResidentType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @rows = 3, @cols = 6 })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Move In Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.MoveInDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.MoveInDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Date Of Birth", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Emergency Notes", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.EmergencyNotes, new { @class = "form-control", @rows = 3, @cols = 6 })
            @Html.ValidationMessageFor(model => model.EmergencyNotes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Emergency Contact", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.TextAreaFor(model => model.EmergencyContact, new { @class = "form-control", @rows = 3, @cols = 6 })
            @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Have Pets", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.HavePets)
                @Html.ValidationMessageFor(model => model.HavePets, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    <input type="button" class="btn btn-primary" value="Resident List" onclick="@("window.location.href='" + @Url.Action("Index", "Resident") + "'");" />
</div>
