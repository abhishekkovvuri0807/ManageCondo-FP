@model PagedList.IPagedList<ManageCondo_FP.Models.UnitViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Units</h2>

<p>
    <input type="button" class="btn btn-primary" value="Add Unit" onclick="@("window.location.href='" + @Url.Action("Create", "Unit") + "'");" />
</p>

@using (Html.BeginForm("Index", "Unit", FormMethod.Get))
{
    <p>
        Find by text: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Unit ID", "Index", new { sortOrder = ViewBag.UnitIDSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.DescriptionSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Level", "Index", new { sortOrder = ViewBag.LevelSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Fob Key", "Index", new { sortOrder = ViewBag.FobkeySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Is Rented", "Index", new { sortOrder = ViewBag.IsRentedSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Property Name", "Index", new { sortOrder = ViewBag.PropertyNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayName("Actions")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.ActionLink(item.UnitID.ToString(), "Details", new { id = item.UnitID })
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Description)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Level)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.FobKey)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Status)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.IsRentedOut)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Property.Name)
    </td>
    <td>
        <span class="glyphicon glyphicon-pencil" onclick="@("window.location.href='" + @Url.Action("Edit", "Unit", new { id = item.UnitID }) + "'");"></span>
        &nbsp;
        &nbsp;
        <span class="glyphicon glyphicon-trash" onclick="@("window.location.href='" + @Url.Action("Delete", "Unit", new { id = item.UnitID }) + "'");"></span>
    </td>
</tr>
    }

</table>


<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
